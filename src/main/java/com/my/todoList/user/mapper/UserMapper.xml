<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.todoList.user.mapper.UserMapper">
	<resultMap id="userMap" type="com.my.todoList.user.Users">
		<id column="user_no" property="userNo"/>
		<result column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="email" property="email"/>
		 
		 <!-- Task 컬렉션 매핑 -->
		<collection property="taskList" javaType="java.util.List" 
		ofType="com.my.todoList.task.Task"
		resultMap="com.my.todoList.task.mapper.TaskMapper.taskMap"
		/>
		
		 <!-- userRole 컬렉션 매핑 -->
		<collection property="userRoles" javaType="java.util.List"
		ofType="com.my.todoList.role.Roles"
		resultMap="com.my.todoList.role.mapper.RoleMapper.userRoleMap"
		></collection>
			
	</resultMap>

	<!-- 유저등록 -->
	<insert id="insert" parameterType="com.my.todoList.user.Users">
		<selectKey resultType="Integer" keyProperty="userNo" order="BEFORE">
			SELECT users_user_no_seq.nextval FROM DUAL
		</selectKey>
		INSERT INTO users (user_no, id, password, email)
		VALUES(#{userNo}, #{id}, #{password}, #{email})
	</insert>
	
	<!-- 유저권한등록 -->
	<insert id="insertUserRole" parameterType="com.my.todoList.role.UserRoles">
		<selectKey resultType="Integer" keyProperty="userRoleNo" order="BEFORE">
			SELECT USER_ROLES_user_role_no_SEQ.nextval FROM DUAL
		</selectKey>
		INSERT INTO user_roles (user_role_no, user_no, role_no)
		VALUES(#{userRoleNo}, users_user_no_seq.currval, 2)
	</insert>
	
	<!-- 유저 수정 -->
	<update id="update" parameterType="com.my.todoList.user.Users">
		UPDATE users
		SET id = #{id}, password = #{password}, email = #{email}
		WHERE user_no = #{userNo}
	</update>
	
	<!-- 유저 삭제 -->
	<delete id="delete" parameterType="Integer">
		DELETE FROM users
		WHERE user_no = #{userNo}
	</delete>
	
	<!-- 특정유저 회원정보 출력 -->
	<select id="selectUserByNo" parameterType="Integer" resultMap="userMap">
		SELECT u.user_no, u.id, u.password, u.email, r.name
			FROM users u 
            JOIN user_roles ur
            ON ur.user_no = u.user_no
            JOIN roles r
            ON r.role_no = ur.role_no
			WHERE u.user_no = #{userNo}
	</select>
	
	<!-- 유저 아이디로 회원정보 출력 -->
	<select id="selectUserById" parameterType="String" resultMap="userMap">
		SELECT u.user_no, u.id, u.password, u.email 
			FROM users u 
			WHERE u.id = #{id}
	</select>
	
	<select id="selectUserAll" resultMap="userMap">
		SELECT user_no, id, email
		FROM users
	</select>
</mapper>
